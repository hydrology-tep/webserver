<?xml version="1.0"?>
<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config"
	xmlns:conf="urn:mace:shibboleth:2.0:native:sp:config" xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
	xmlns:samlp="urn:oasis:names:tc:SAML:2.0:protocol" xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
	logger="/etc/shibboleth/shibd.logger" clockSkew="7600">
	<!-- The OutOfProcess section contains properties affecting the shibd daemon. -->
	<OutOfProcess logger="/etc/shibboleth/shibd.logger">
	</OutOfProcess>
	<!-- The InProcess section contains settings affecting web server modules/filters. -->
	<InProcess logger="/etc/shibboleth/native.logger">
	</InProcess>
	<!-- Only one listener can be defined, to connect in-process modules to 
		shibd. -->
	<UnixListener address="/var/run/shibboleth/shibd.sock" />
	<!--<TCPListener address="127.0.0.1" port="12345" acl="127.0.0.1"/> -->
	<!-- This set of components stores sessions and other persistent data in 
		daemon memory. -->
	<StorageService type="Memory" id="mem" cleanupInterval="900" />
	<SessionCache type="StorageService" StorageService="mem"
		cacheTimeout="3600" inprocTimeout="900" cleanupInterval="900" />
	<ReplayCache StorageService="mem" />
	<ArtifactMap artifactTTL="180" />
	<!-- To customize behavior, map hostnames and path components to applicationId 
		and other settings. -->
	<RequestMapper type="Native">
		<RequestMap applicationId="default">
			<Host scheme="https" name="${UMSSO_SP_HOST}" port="443"
				authType="shibboleth" requireSession="true" exportAssertion="true" />
		</RequestMap>
	</RequestMapper>
	<ApplicationDefaults id="default" policyId="default"
		entityID="https://${UMSSO_SP_HOST}/shibboleth" homeURL="https://${UMSSO_SP_HOST}"
		REMOTE_USER="eppn persistent-id targeted-id" signing="false"
		encryption="false" timeout="30" connectTimeout="15">
		<Sessions exportLocation="/GetAssertion" lifetime="7200"
			timeout="3600" checkAddress="false" consistentAddress="true"
			handlerURL="/Shibboleth.sso" handlerSSL="true" idpHistory="true"
			idpHistoryDays="7">
			<SessionInitiator type="SAML2"
				entityID="https://${UMSSO_IDP_HOST}:443/shibboleth" forceAuthn="false"
				Location="/Login" template="/etc/shibboleth/bindingTemplate.html" />
			<md:AssertionConsumerService Location="/SAML2/Artifact"
				index="1" Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact" />
			<md:SingleLogoutService Location="/SLO/Redirect"
				Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
				conf:template="/etc/shibboleth/bindingTemplate.html" />
			<LogoutInitiator type="Local" Location="/Logout"
				template="/etc/shibboleth/bindingTemplate.html" />
			<LogoutInitiator type="SAML2" Location="/SLogout"
				template="/etc/shibboleth/bindingTemplate.html" />
		</Sessions>
		<Errors session="/etc/shibboleth/sessionError.html" metadata="/etc/shibboleth/metadataError.html"
			access="/etc/shibboleth/accessError.html" ssl="/etc/shibboleth/sslError.html"
			supportContact="${IDP_SUPPORT_MAIL}" logoLocation="/shibboleth-sp/logo.jpg"
			styleSheet="/shibboleth-sp/main.css" globalLogout="/etc/shibboleth/globalLogout.html"
			localLogout="${INSTALLATIONROOT}/sites/${SITE}/etc/shibboleth/localLogout.html">
		</Errors>
		<RelyingParty Name="https://${UMSSO_IDP_HOST}:443/shibboleth"
			keyName="defcreds" />
		<MetadataProvider type="Chaining">
			<MetadataProvider type="XML"
				file="${INSTALLATIONROOT}/sites/${SITE}/etc/shibboleth/idp-metadata.xml" />
			<MetadataProvider type="XML"
				file="${INSTALLATIONROOT}/sites/${SITE}/etc/shibboleth/sp-metadata.xml" />
		</MetadataProvider>
		<!-- Chain the two built-in trust engines together. -->
		<TrustEngine type="Chaining">
			<TrustEngine type="ExplicitKey" />
			<TrustEngine type="PKIX" />
		</TrustEngine>
		<!-- Map to extract attributes from SAML assertions. -->
		<AttributeExtractor type="XML"
			path="${INSTALLATIONROOT}/sites/${SITE}/etc/shibboleth/attribute-map.xml" />
		<!-- Use a SAML query if no attributes are supplied during SSO. -->
		<AttributeResolver type="Query" />
		<!-- Default filtering policy for recognized attributes, lets other data 
			pass. -->
		<AttributeFilter type="XML"
			path="${INSTALLATIONROOT}/sites/${SITE}/etc/shibboleth/attribute-policy.xml" />
		<CredentialResolver type="File"
			key="/etc/pki/tls/private/spkey.pem" certificate="/etc/pki/tls/certs/spcert.pem"
			keyName="defcreds" />
	</ApplicationDefaults>
	<!-- Each policy defines a set of rules to use to secure messages. -->
	<SecurityPolicies>
		<Policy id="default" validate="false">
			<PolicyRule type="MessageFlow" checkReplay="true" expires="60" />
			<PolicyRule type="Conditions">
				<PolicyRule type="Audience" />
			</PolicyRule>
			<PolicyRule type="ClientCertAuth" errorFatal="true" />
			<PolicyRule type="XMLSigning" errorFatal="true" />
			<PolicyRule type="SimpleSigning" errorFatal="true" />
		</Policy>
	</SecurityPolicies>
</SPConfig>

